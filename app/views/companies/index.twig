{% extends "layouts/default.twig" %}

{% block content %}
    <div style="max-width: 800px; margin: auto; padding: 20px;">
        <h2 style="text-align: center; color: #2E8B57;">Liste des Compagnies</h2>
{% if message is not empty %}
    {% if message.type == 'success' %}
        <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4" role="alert">
            <p>{{ message.message }}</p>
        </div>
    {% else %}
        <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4" role="alert">
            <p>{{ message.message }}</p>
        </div>
    {% endif %}
{% endif %}

        <div style="text-align: right; margin-bottom: 20px;">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <a href="/companies/trash" style="text-decoration: none; padding: 10px 15px; background-color: #ff4d4d; color: white; border-radius: 5px;">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block" viewBox="0 0 20 20" fill="currentColor" style="width: 20px; height: 20px; vertical-align: middle;">
                        <path fill-rule="evenodd" d="M6 2a1 1 0 00-.894.553L4 4H2a1 1 0 000 2h1v10a2 2 0 002 2h8a2 2 0 002-2V6h1a1 1 0 100-2h-2l-.106-.447A1 1 0 0014 2H6zm3 4a1 1 0 112 0v7a1 1 0 11-2 0V6z" clip-rule="evenodd"/>
                    </svg>
                    Corbeille
                </a>
                <button onclick="openCreateModal()" style="text-decoration: none; padding: 10px 15px; background-color: #2E8B57; color: white; border-radius: 5px;">Create Company</button>
            </div>
        </div>
        <div id="companies-table">
        </div>
    </div>

    <div id="createModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden">
        <div class="modal-content bg-white p-6 rounded-lg shadow-lg max-w-2xl mx-auto mt-20">
            <h2 class="text-2xl font-bold mb-4">Create New Company</h2>
            <form id="createForm" onsubmit="handleCreate(event)" enctype="multipart/form-data">
                <input type="hidden" name="token" value="{{ csrf_token() }}">
                
                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="name">Company Name</label>
                    <input type="text" name="name" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700">
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="description">Description</label>
                    <textarea name="description" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700" rows="4"></textarea>
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="logo">Logo</label>
                    <input type="file" name="logo" accept="image/*" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700">
                    <p class="text-sm text-gray-500 mt-1">Accepted formats: JPG, JPEG, PNG</p>
                </div>

                <div class="flex justify-end gap-2">
                    <button type="button" onclick="closeModal('createModal')" class="bg-gray-500 text-white px-4 py-2 rounded">Cancel</button>
                    <button type="submit" class="bg-green-500 text-white px-4 py-2 rounded">Create</button>
                </div>
            </form>
        </div>
    </div>

    <div id="editModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden">
        <div class="modal-content bg-white p-6 rounded-lg shadow-lg max-w-2xl mx-auto mt-20">
            <h2 class="text-2xl font-bold mb-4">Edit Company</h2>
            <form id="editForm" onsubmit="handleEdit(event)" enctype="multipart/form-data">
                <input type="hidden" name="token" value="{{ csrf_token() }}">
                <input type="hidden" name="id" id="edit_id">
                
                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_name">Company Name</label>
                    <input type="text" id="edit_name" name="name" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700">
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_description">Description</label>
                    <textarea id="edit_description" name="description" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700" rows="4"></textarea>
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_logo">Logo</label>
                    <input type="file" id="edit_logo" name="logo" accept="image/*" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700">
                    <p class="text-sm text-gray-500 mt-1">Accepted formats: JPG, JPEG, PNG</p>
                    <div id="current_logo" class="mt-2"></div>
                </div>

                <div class="flex justify-end gap-2">
                    <button type="button" onclick="closeModal('editModal')" class="bg-gray-500 text-white px-4 py-2 rounded">Cancel</button>
                    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded">Update</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', loadCompanies);

        function loadCompanies() {
            fetch('/api/companies')
                .then(response => response.text())
                .then(html => {
                    document.getElementById('companies-table').innerHTML = html;
                });
        }

        function openCreateModal() {
            document.getElementById('createModal').classList.remove('hidden');
        }

        function openEditModal(company) {
            document.getElementById('edit_id').value = company.id;
            document.getElementById('edit_name').value = company.name;
            document.getElementById('edit_description').value = company.description;
            
            // Display current logo if exists
            const currentLogoDiv = document.getElementById('current_logo');
            if (company.logo) {
                currentLogoDiv.innerHTML = `
                    <div class="mt-2">
                        <p class="text-sm font-bold mb-1">Current Logo:</p>
                        <img src="/${company.logo}" alt="Current logo" class="max-h-32 rounded border">
                    </div>`;
            } else {
                currentLogoDiv.innerHTML = '<p class="text-sm text-gray-500">No logo uploaded</p>';
            }
            
            document.getElementById('editModal').classList.remove('hidden');
        }

        function closeModal(modalId) {
            document.getElementById(modalId).classList.add('hidden');
        }

        async function handleCreate(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            
            try {
                const response = await fetch('/api/companies/store', {
                    method: 'POST',
                    body: formData
                });
                
                if (response.ok) {
                    closeModal('createModal');
                    loadCompanies();
                    event.target.reset();
                } else {
                    const data = await response.json();
                    alert(data.error || 'Error creating company');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function handleEdit(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const id = formData.get('id');
            
            try {
                const response = await fetch(`/api/companies/update/${id}`, {
                    method: 'POST',
                    body: formData
                });
                
                if (response.ok) {
                    closeModal('editModal');
                    loadCompanies();
                } else {
                    const data = await response.json();
                    alert(data.error || 'Error updating company');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function handleDelete(id) {
            const formData = new FormData();
            formData.append('token', '{{ csrf_token() }}');

            try {
                const response = await fetch(`/api/companies/delete/${id}`, {
                    method: 'POST',
                    body: formData
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    loadCompanies();
                } else {
                    const errorDiv = document.createElement('div');
                    errorDiv.className = 'bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4';
                    errorDiv.innerHTML = `<p>${data.error || 'Error deleting company'}</p>`;
                    
                    const contentDiv = document.querySelector('#companies-table').parentNode;
                    contentDiv.insertBefore(errorDiv, contentDiv.firstChild);
                    
                    setTimeout(() => errorDiv.remove(), 6000);
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }
    </script>
{% endblock %}
