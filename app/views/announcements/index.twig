{% extends "layouts/auth.twig" %}

{% block content %}
<div class="min-h-screen bg-gray-100 py-8">
    <div class="absolute top-4 left-4">
        <a href="/logout" 
           class="px-4 py-2 bg-red-600 text-white rounded-lg border-2 border-gray-800 hover:bg-red-800 transition font-bold flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M3 3a1 1 0 011 1v12a1 1 0 11-2 0V4a1 1 0 011-1zm7.707 3.293a1 1 0 010 1.414L9.414 9H17a1 1 0 110 2H9.414l1.293 1.293a1 1 0 01-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
            Logout
        </a>
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-8">
            <h2 class="text-3xl font-bold text-gray-900">
                <span class="text-green-500">G</span>estion des Annonces
            </h2>
            <p class="mt-2 text-gray-600">Gérer vos annonces d'emploi</p>
        </div>

        <div class="mb-6 text-right space-x-2">
            <a href="/companies" class="hover:shadow-[6px_6px_#030101] px-6 py-3 bg-blue-500 text-white rounded-lg border-2 border-gray-800 hover:bg-blue-600 transition font-bold inline-flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h8a2 2 0 012 2v12a1 1 0 110 2h-3a1 1 0 01-1-1v-2a1 1 0 00-1-1H9a1 1 0 00-1 1v2a1 1 0 01-1 1H4a1 1 0 110-2V4zm3 1h6v4H7V5zm6 6H7v2h6v-2z" clip-rule="evenodd"/>
                </svg>
                Company
            </a>
            <a href="/" class="hover:shadow-[6px_6px_#030101] px-6 py-3 bg-purple-500 text-white rounded-lg border-2 border-gray-800 hover:bg-purple-600 transition font-bold inline-flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"/>
                </svg>
                Index
            </a>
            <a href="/announcements/trash" class="hover:shadow-[6px_6px_#030101] px-6 py-3 bg-red-500 text-white rounded-lg border-2 border-gray-800 hover:bg-red-600 transition font-bold inline-flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M6 2a1 1 0 00-.894.553L4 4H2a1 1 0 000 2h1v10a2 2 0 002 2h8a2 2 0 002-2V6h1a1 1 0 100-2h-2l-.106-.447A1 1 0 0014 2H6zm3 4a1 1 0 112 0v7a1 1 0 11-2 0V6z" clip-rule="evenodd"/>
                </svg>
                Corbeille
            </a>
            <button onclick="openCreateModal()" class="hover:shadow-[6px_6px_#030101] px-6 py-3 bg-green-500 text-white rounded-lg border-2 border-gray-800 hover:bg-green-600 transition font-bold inline-flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                </svg>
                Créer une annonce
            </button>
        </div>

        <div id="announcements-table" class="bg-white rounded-xl border-4 border-gray-800 overflow-hidden">
        </div>

        <div id="createModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden">
            <div class="modal-content bg-white p-6 rounded-xl border-4 border-gray-800 shadow-lg max-w-2xl mx-auto mt-20">
                <h2 class="text-2xl font-bold mb-4">Créer une nouvelle annonce</h2>
                <form id="createForm" onsubmit="handleCreate(event)" enctype="multipart/form-data">
                    <input type="hidden" name="token" value="{{ csrf_token() }}">
                    
                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="title">Titre</label>
                        <input type="text" name="title" required class="w-full px-3 py-2 border-2 border-gray-800 rounded-lg focus:outline-none focus:border-green-500">
                    </div>

                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="description">Description</label>
                        <textarea name="description" required class="w-full px-3 py-2 border-2 border-gray-800 rounded-lg focus:outline-none focus:border-green-500" rows="4"></textarea>
                    </div>

                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="company_id">Entreprise</label>
                        <select name="company_id" required class="w-full px-3 py-2 border-2 border-gray-800 rounded-lg focus:outline-none focus:border-green-500">
                            <option value="">Sélectionner une entreprise</option>
                            {% for company in companies %}
                                <option value="{{ company.id }}">{{ company.name }}</option>
                            {% endfor %}
                        </select>
                    </div>

                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="image">Image</label>
                        <input type="file" name="image" accept="image/*" 
                               class="w-full px-3 py-2 border-2 border-gray-800 rounded-lg focus:outline-none focus:border-green-500">
                    </div>

                    <div class="flex justify-end gap-2">
                        <button type="button" onclick="closeModal('createModal')" class="px-4 py-2 bg-gray-500 text-white rounded-lg border-2 border-gray-800 hover:bg-gray-600 transition">Annuler</button>
                        <button type="submit" class="px-4 py-2 bg-green-500 text-white rounded-lg border-2 border-gray-800 hover:bg-green-600 transition">Créer</button>
                    </div>
                </form>
            </div>
        </div>

        <div id="editModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden">
            <div class="modal-content bg-white p-6 rounded-xl border-4 border-gray-800 shadow-lg max-w-2xl mx-auto mt-20">
                <h2 class="text-2xl font-bold mb-4">Modifier l'annonce</h2>
                <form id="editForm" onsubmit="handleEdit(event)" enctype="multipart/form-data">
                    <input type="hidden" name="token" value="{{ csrf_token() }}">
                    <input type="hidden" name="id" id="edit_id">
                    
                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_title">Titre</label>
                        <input type="text" id="edit_title" name="title" required class="w-full px-3 py-2 border-2 border-gray-800 rounded-lg focus:outline-none focus:border-green-500">
                    </div>

                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_description">Description</label>
                        <textarea id="edit_description" name="description" required class="w-full px-3 py-2 border-2 border-gray-800 rounded-lg focus:outline-none focus:border-green-500" rows="4"></textarea>
                    </div>

                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_company_id">Entreprise</label>
                        <select id="edit_company_id" name="company_id" required class="w-full px-3 py-2 border-2 border-gray-800 rounded-lg focus:outline-none focus:border-green-500">
                            <option value="">Sélectionner une entreprise</option>
                            {% for company in companies %}
                                <option value="{{ company.id }}">{{ company.name }}</option>
                            {% endfor %}
                        </select>
                    </div>

                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_image">Image</label>
                        <input type="file" id="edit_image" name="image" accept="image/*" 
                               class="w-full px-3 py-2 border-2 border-gray-800 rounded-lg focus:outline-none focus:border-green-500">
                    </div>

                    <div class="flex justify-end gap-2">
                        <button type="button" onclick="closeModal('editModal')" class="px-4 py-2 bg-gray-500 text-white rounded-lg border-2 border-gray-800 hover:bg-gray-600 transition">Annuler</button>
                        <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-lg border-2 border-gray-800 hover:bg-blue-600 transition">Mettre à jour</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

{% if session().has('error') %}
    <div class="fixed top-4 right-4 bg-red-50 border-l-4 border-red-400 p-4 rounded-lg shadow-lg" role="alert">
        <p class="text-red-700">{{ session().get('error') }}</p>
    </div>
{% endif %}

{% if session().has('success') %}
    <div class="fixed top-4 right-4 bg-green-50 border-l-4 border-green-400 p-4 rounded-lg shadow-lg" role="alert">
        <p class="text-green-700">{{ session().get('success') }}</p>
    </div>
{% endif %}

<script>
    document.addEventListener('DOMContentLoaded', loadAnnouncements);

    function loadAnnouncements() {
        fetch('/api/announcements')
            .then(response => response.text())
            .then(html => {
                document.getElementById('announcements-table').innerHTML = html;
            });
    }

    function openCreateModal() {
        document.getElementById('createModal').classList.remove('hidden');
    }

    function openEditModal(announcement) {
        document.getElementById('edit_id').value = announcement.id;
        document.getElementById('edit_title').value = announcement.title;
        document.getElementById('edit_description').value = announcement.description;
        document.getElementById('edit_company_id').value = announcement.company_id;
        
        document.getElementById('editModal').classList.remove('hidden');
    }

    function closeModal(modalId) {
        document.getElementById(modalId).classList.add('hidden');
    }

    async function handleCreate(event) {
        event.preventDefault();
        const formData = new FormData(event.target);
        
        try {
            const response = await fetch('/api/announcements/store', {
                method: 'POST',
                body: formData
            });
            
            if (response.ok) {
                closeModal('createModal');
                loadAnnouncements();
                event.target.reset();
            } else {
                alert('Erreur lors de la création de l\'annonce');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    async function handleEdit(event) {
        event.preventDefault();
        const formData = new FormData(event.target);
        const id = formData.get('id');
        
        try {
            const response = await fetch(`/api/announcements/update/${id}`, {
                method: 'POST',
                body: formData
            });
            
            if (response.ok) {
                closeModal('editModal');
                loadAnnouncements();
            } else {
                const data = await response.json();
                alert(data.error || 'Erreur lors de la mise à jour de l\'annonce');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Une erreur est survenue');
        }
    }

    async function handleDelete(id) {
        if (!confirm('Êtes-vous sûr de vouloir supprimer cette annonce ?')) return;
        
        const formData = new FormData();
        formData.append('token', '{{ csrf_token() }}');

        try {
            const response = await fetch(`/api/announcements/delete/${id}`, {
                method: 'POST',
                body: formData
            });
            
            if (response.ok) {
                loadAnnouncements();
            } else {
                alert('Erreur lors de la suppression de l\'annonce');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    async function deleteImage(imageName, announcementId) {
        if (!confirm('Êtes-vous sûr de vouloir supprimer cette image ?')) return;
        
        const formData = new FormData();
        formData.append('token', '{{ csrf_token() }}');
        formData.append('image', imageName);

        try {
            const response = await fetch(`/api/announcements/${announcementId}/delete-image`, {
                method: 'POST',
                body: formData
            });
            
            if (response.ok) {
                loadAnnouncements();
                closeModal('editModal');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }
</script>
{% endblock %}
